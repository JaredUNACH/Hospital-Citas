"""Initial migration.

Revision ID: 068fdff92cc8
Revises: 
Create Date: 2024-09-14 22:12:43.683929

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '068fdff92cc8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=150), nullable=False),
    sa.Column('email', sa.String(length=150), nullable=False),
    sa.Column('password', sa.String(length=150), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.drop_table('especialidades')
    with op.batch_alter_table('pacientes', schema=None) as batch_op:
        batch_op.drop_index('idx_paciente_email')

    op.drop_table('pacientes')
    with op.batch_alter_table('citas', schema=None) as batch_op:
        batch_op.drop_index('idx_cita_fecha')

    op.drop_table('citas')
    with op.batch_alter_table('medicos', schema=None) as batch_op:
        batch_op.drop_index('idx_medico_email')

    op.drop_table('medicos')
    with op.batch_alter_table('horarios_disponibilidad', schema=None) as batch_op:
        batch_op.drop_index('idx_horario_medico')

    op.drop_table('horarios_disponibilidad')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('horarios_disponibilidad',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('medico_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('dia_semana', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('hora_inicio', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('hora_fin', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['medico_id'], ['medicos.id'], name='horarios_disponibilidad_medico_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='horarios_disponibilidad_pkey')
    )
    with op.batch_alter_table('horarios_disponibilidad', schema=None) as batch_op:
        batch_op.create_index('idx_horario_medico', ['medico_id', 'dia_semana'], unique=False)

    op.create_table('medicos',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('medicos_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('apellido_paterno', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('apellido_materno', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('especialidad_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fecha_registro', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['especialidad_id'], ['especialidades.id'], name='medicos_especialidad_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='medicos_pkey'),
    sa.UniqueConstraint('email', name='medicos_email_key'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('medicos', schema=None) as batch_op:
        batch_op.create_index('idx_medico_email', ['email'], unique=False)

    op.create_table('citas',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('paciente_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('medico_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fecha', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('estado', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('fecha_creacion', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['medico_id'], ['medicos.id'], name='citas_medico_id_fkey'),
    sa.ForeignKeyConstraint(['paciente_id'], ['pacientes.id'], name='citas_paciente_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='citas_pkey')
    )
    with op.batch_alter_table('citas', schema=None) as batch_op:
        batch_op.create_index('idx_cita_fecha', ['fecha'], unique=False)

    op.create_table('pacientes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('apellido_paterno', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('apellido_materno', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('fecha_nacimiento', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('fecha_registro', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('rol', sa.VARCHAR(length=50), server_default=sa.text("'usuario'::character varying"), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='pacientes_pkey'),
    sa.UniqueConstraint('email', name='pacientes_email_key')
    )
    with op.batch_alter_table('pacientes', schema=None) as batch_op:
        batch_op.create_index('idx_paciente_email', ['email'], unique=False)

    op.create_table('especialidades',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='especialidades_pkey'),
    sa.UniqueConstraint('nombre', name='especialidades_nombre_key')
    )
    op.drop_table('user')
    # ### end Alembic commands ###
